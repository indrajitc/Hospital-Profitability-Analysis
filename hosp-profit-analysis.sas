/*Project 3*/

/*Creation/Accessing of Project 3 library*/
libname project3 'C:\Users\Owner\Documents\Grad School\MS Statistics\Fall 2016\Interpretation of Data I\Project 3\Project_3';
OPTIONS PS=55 LS=70;
/* Read dataset from xlsx file*/
PROC IMPORT OUT= project3.hospital DATAFILE= "C:\Users\Owner\Documents\Grad School\MS Statistics\Fall 2016\Interpretation of Data I\Project 3\Project_3\hospital.xlsx" 
            DBMS=xlsx REPLACE;
     SHEET="hospital"; 
     GETNAMES=YES;
RUN; 
DATA project3.hospital;
SET project3.hospital;
SALES = SALESY + SALES12;
RUN;
/*Tranformations on Explanatory Variables, done before splitting data by sales*/
data project3.hospital_transformed;
set project3.hospital;
	BEDS = BEDS**(1/2); /*Good*/
	RBEDS = RBEDS**(1/2);
	HIP95 = HIP95**(1/4); 
	KNEE95 = KNEE95**(1/4); 
	HIP96 = HIP96**(1/4); 
	KNEE96 = KNEE96**(1/4); 
	FEMUR96 = FEMUR96**(1/4); 
	OUTV = LOG(1+(OUTV/500));
	ADM = LOG(1+(ADM/500)); /*Good*/
	SIR = LOG(1+(SIR/500));
	/*SALES = LOG(1+SALES); KEEP UNCHANGED for now, apply separately to each dataset after*/ 
RUN;
/*Principal Component Analysis (On Training Data)*/
/*Demographic Variables*/
proc princomp DATA = project3.hospital_transformed cov out = project3.a;
	var BEDS RBEDS OUTV ADM SIR TH trauma rehab;
run;
/*The SCREE Plot generated by the Principal Component Procedure indicates to us that
the majority of the variance for the Demographic Variables can be explained by the 
first 2 Principal Components*/

/*Operation Number Variables*/
proc princomp DATA = project3.hospital_transformed cov out = project3.a;
	var HIP95 KNEE95 HIP96 KNEE96 FEMUR96;
run;
/*The SCREE Plot generated by the Principal Component Procedure indicates to us that
the majority of the variance for the Operation Number Variables can be explained by the 
first Principal Component*/

/*Factor Analysis*/
/*Demographic Variables*/
PROC FACTOR data=project3.hospital_transformed METHOD=PRIN NFACT=2 rotate=varimax out=project3.hospital_demofactors;
var  BEDS RBEDS OUTV ADM SIR TH trauma rehab;
RUN;
/*Operation Number Variables*/
PROC FACTOR data=project3.hospital_transformed METHOD=PRIN NFACT=1 out=project3.hospital_operationfactors;
var  HIP95 KNEE95 HIP96 KNEE96 FEMUR96;
RUN;
/*Rename Demographic Factor Names for Merge*/
DATA project3.hospital_demofactors;
SET project3.hospital_demofactors;
DemoFactor1 = Factor1;
DemoFactor2 = Factor2;
RUN;
DATA project3.hospital_demofactors;
SET project3.hospital_demofactors;
DROP Factor1 Factor2;
RUN;
/*Rename Operation Number Factor Names for Merge*/
DATA project3.hospital_operationfactors;
SET project3.hospital_operationfactors;
OperationFactor1 = Factor1;
RUN;
DATA project3.hospital_operationfactors;
SET project3.hospital_operationfactors;
DROP Factor1;
RUN;
/*Merging hospital datasets with Operation Factors and Demographic Factors*/
DATA project3.temp2;
SET project3.hospital_operationfactors;
KEEP HID OperationFactor1;
RUN; 
DATA project3.temp1; 
  SET project3.hospital_demofactors;
RUN; 
PROC SORT DATA=project3.temp1 OUT=project3.temp1; 
  BY HID; 
RUN;
PROC SORT DATA=project3.temp2 OUT=project3.temp2; 
  BY HID; 
RUN; 
DATA project3.hospital_allfactors; 
  MERGE project3.temp1 project3.temp2; 
  BY HID; 
RUN;
/*Subset of above dataset where all variables that made up SALES or any of the factors was deleted*/
DATA project3.hospital_onlyfactors;
SET project3.hospital_allfactors;
DROP BEDS RBEDS OUTV ADM SIR TH trauma rehab HIP95 KNEE95 HIP96 KNEE96 FEMUR96 SALESY SALES12 I; 
RUN; 
DATA project3.hospital_onlyfactors;
SET project3.hospital_onlyfactors;
ident=_n_; /*Individual Identifier for each Observation*/
RUN;
/*Training Data Set, Includes Observations with Positive Sales: 2,707 Observations*/
data project3.trainingdata;
set project3.hospital_onlyfactors;
IF SALES > 0; 
run;
/*Use Transformation on Sales Variable separately after splitting dataset*/
data project3.trainingdata;
set project3.trainingdata;
SALES = LOG(1+SALES); 
run;
/*Test Data Set, Includes Observations with No Sales: 1,996 Observations*/
data project3.testdata;
set project3.hospital_onlyfactors;
IF SALES = 0;
RUN;
/*Use Transformation on Sales Variable separately after splitting dataset*/
data project3.testdata;
set project3.testdata;
SALES = LOG(1+SALES);
RUN; 
/*Cluster Analysis*/
proc sort DATA = project3.trainingdata;
  by ident;
proc cluster DATA = project3.trainingdata method=ward outtree=project3.clust1 noprint;
  var DemoFactor1 DemoFactor2 OperationFactor1;
  id ident;
  run;
/*Tested Cluster Numbers of 8-20, at Number 12, the increase in average R^2 of the three factors began to stagnate,
  so we picked 12*/
proc tree horizontal nclusters=12 out=project3.clust2 noprint;
  id ident;
  run;
proc sort DATA = project3.clust2;
  by ident;
  run;
data project3.combine;
  merge project3.trainingdata project3.clust2;
  by ident;
  run;
proc glm;
  class cluster;
  model DemoFactor1 DemoFactor2 OperationFactor1= cluster;
  means cluster;
  run;
proc sort data = project3.combine;
by CLUSTER;
RUN;
/*Selection of Cluster(s)*/
/*Creation of Variable Indicating 80% Percentile of Sales or Greater*/
proc univariate data=project3.combine noprint;
  var SALES;
  output pctlpre=P_ pctlpts= 50, 75 to 100 by 5;
run;
proc print data=data1;
run;
/*80th Percentile Value of Sales was found to be 5.12396*/
DATA project3.combine;
SET project3.combine;
High_Sales = .;
IF (SALES < 5.12396) THEN High_Sales = 0;
IF (SALES >= 5.12396) THEN High_Sales = 1; 
RUN;
/*Mean Percentage of Hospitals in Each Cluster with Greater than or equal to 80% Percentile of Sales*/
proc means DATA = project3.combine noprint;
by cluster;
var High_Sales DemoFactor1 DemoFactor2 OperationFactor1;
output out=project3.c mean= High_Sales_Percentage Mean_DemoFactor_1 Mean_DemoFactor_2 Mean_OperationFactor_1;
run;
proc print;
run;
/*47% of Cluster 11 has at or higher than 80% Percentile for Sales, which is much higher than for any other
Cluster, closest other having 41%, so we pick Cluster 11 as our optimal Cluster*/
/*Determining Which Clusters the Observations in the Test Set belong to*/
/*Find Centroids of Each Cluster: Mean Values of (DemoFactor1, DemoFactor2, OperationFactor1), these were
found above, written in Excel*/
DATA project3.trainingwithclusters;
SET project3.combine;
RUN;
DATA project3.testingwithclusters;
SET project3.testdata;
CLUST1DIST = 0;CLUST2DIST = 0;CLUST3DIST = 0;CLUST4DIST = 0;CLUST5DIST = 0;CLUST6DIST = 0;CLUST7DIST = 0;CLUST8DIST = 0;
CLUST9DIST = 0;CLUST10DIST = 0;CLUST11DIST = 0;CLUST12DIST = 0; CLUSTER = 0;  
CLUST1DIST = ((DemoFactor1-(-1.27742))**2)+((DemoFactor2-(2.65889))**2)+((OperationFactor1-(-1.81626))**2);
CLUST2DIST = ((DemoFactor1-(-0.12806))**2)+((DemoFactor2-(-0.53647))**2)+((OperationFactor1-(0.44113))**2);
CLUST3DIST = ((DemoFactor1-(-1.25244))**2)+((DemoFactor2-(-0.29303))**2)+((OperationFactor1-(-1.91652))**2);
CLUST4DIST = ((DemoFactor1-(-0.53611))**2)+((DemoFactor2-(-0.46703))**2)+((OperationFactor1-(-0.09987))**2);
CLUST5DIST = ((DemoFactor1-(0.92881))**2)+((DemoFactor2-(-0.50689))**2)+((OperationFactor1-(0.96845))**2);
CLUST6DIST = ((DemoFactor1-(0.31449))**2)+((DemoFactor2-(-0.54657))**2)+((OperationFactor1-(0.82648))**2);
CLUST7DIST = ((DemoFactor1-(1.73402))**2)+((DemoFactor2-(-0.36893))**2)+((OperationFactor1-(1.34305))**2);
CLUST8DIST = ((DemoFactor1-(-0.65791))**2)+((DemoFactor2-(-0.39957))**2)+((OperationFactor1-(-1.09215))**2);
CLUST9DIST = ((DemoFactor1-(0.93325))**2)+((DemoFactor2-(-0.38786))**2)+((OperationFactor1-(0.05201))**2);
CLUST10DIST = ((DemoFactor1-(0.95513))**2)+((DemoFactor2-(1.73418))**2)+((OperationFactor1-(0.94074))**2);
CLUST11DIST = ((DemoFactor1-(2.13316))**2)+((DemoFactor2-(1.99347))**2)+((OperationFactor1-(1.4129))**2);
CLUST12DIST = ((DemoFactor1-(-0.14623))**2)+((DemoFactor2-(1.51082))**2)+((OperationFactor1-(0.22257))**2);
MINCLUSTDIST = MIN(CLUST1DIST,CLUST2DIST,CLUST3DIST,CLUST4DIST,CLUST5DIST,CLUST6DIST,CLUST7DIST,CLUST8DIST,
CLUST9DIST,CLUST10DIST,CLUST11DIST,CLUST12DIST);
IF(MINCLUSTDIST=CLUST1DIST) THEN CLUSTER = 1;
IF(MINCLUSTDIST=CLUST2DIST) THEN CLUSTER = 2; 
IF(MINCLUSTDIST=CLUST3DIST) THEN CLUSTER = 3; 
IF(MINCLUSTDIST=CLUST4DIST) THEN CLUSTER = 4; 
IF(MINCLUSTDIST=CLUST5DIST) THEN CLUSTER = 5; 
IF(MINCLUSTDIST=CLUST6DIST) THEN CLUSTER = 6; 
IF(MINCLUSTDIST=CLUST7DIST) THEN CLUSTER = 7; 
IF(MINCLUSTDIST=CLUST8DIST) THEN CLUSTER = 8; 
IF(MINCLUSTDIST=CLUST9DIST) THEN CLUSTER = 9; 
IF(MINCLUSTDIST=CLUST10DIST) THEN CLUSTER = 10; 
IF(MINCLUSTDIST=CLUST11DIST) THEN CLUSTER = 11; 
IF(MINCLUSTDIST=CLUST12DIST) THEN CLUSTER = 12;  
RUN;
DATA project3.testingwithclusters;
SET project3.testingwithclusters;
DROP CLUST1DIST CLUST2DIST CLUST3DIST CLUST4DIST CLUST5DIST CLUST6DIST CLUST7DIST CLUST8DIST CLUST9DIST 
CLUST10DIST CLUST11DIST CLUST12DIST MINCLUSTDIST;
RUN;
/*Subsetting Testing Dataset by Optimal Cluster 11*/
DATA project3.testingcluster11;
SET project3.testingwithclusters; 
IF CLUSTER = 11;
RUN;
PROC PRINT DATA = project3.testingcluster11;
RUN; 
DATA project3.trainingcluster11;
SET project3.trainingwithclusters;
IF CLUSTER = 11;
RUN; 
/*Prediction of Possible Gains*/
/*A is dataset that is modeled on, ScoreX is the dataset we wish to predict values on, name of predicted variable
in scoreX will be called Yhat, Pred is the dataset that contains variables and their new predicted values*/
proc reg data=project3.trainingcluster11 outest=project3.RegOut noprint;
   PredictedSales: model SALES = DemoFactor1 DemoFactor2 OperationFactor1;
quit;
 proc score data=project3.testingcluster11 score=project3.RegOut type=parms predict out=project3.Pred;
   var DemoFactor1 DemoFactor2 OperationFactor1;
run;
DATA project3.Predicted_Gains;
SET project3.Pred;
Predicted_Sales = exp(PredictedSales)-1;
Actual_Sales = exp(Sales)-1;
Potential_Gain = Predicted_Sales - Actual_Sales; 
RUN;
PROC SORT DATA = project3.Predicted_Gains;
BY Potential_Gain;
RUN;
DATA project3.results;
SET project3.Predicted_Gains;
DROP SALES DemoFactor1 DemoFactor2 OperationFactor1 PredictedSales;
RUN;
PROC PRINT DATA = project3.results;
RUN;


/*PROC reg DATA=project3.clusters16;
model Sales =  DemoFactor1 DemoFactor2 OperationFactor1/ P R selection=b  ; 
OUTPUT   OUT=C P=PRED R=RESID STDP=STDP;
run;
data C ; 
set C;
rowp = exp(PRED+ 0.5*STDP*STDP)-1;
epred = exp(pred)-1;
Sales = exp(Sales) -1;
gain = rowp - Sales;
run;
proc sort;
by gain;
proc print;
run;*/


